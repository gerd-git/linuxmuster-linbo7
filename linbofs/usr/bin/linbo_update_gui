#!/bin/sh
#
# download linbo_gui from server
#
# thomas@linuxmuster.net
# 20220223
#


# is boot splash active?
grep -qw splash /proc/cmdline && SPLASH="yes"


# print status msg
print_status(){
  msg="$1"
  if [ -n "$SPLASH" ]; then
    plymouth message --text="$LINBOVER"
    plymouth update --status="$msg"
  fi
  echo "$msg"
}


# filename of gui archive
gui_archive="linbo_gui64_7.tar.lz"


# check if isoboot and try to get linbo_gui archive from cdrom
if cat /proc/cmdline | grep -wq isoboot; then
  print_status "ISO/USB boot detected, trying to get linbo_gui from removable media." | tee -a /cache/linbo.log
  mkdir -p /media
  for i in /dev/disk/by-id/*; do
    if mount "$i" /media &> /dev/null; then
      # check for linbo_gui on iso
        if [ -s "/media/$gui_archive" ]; then
          tar xf "/media/$gui_archive" -C / || return 1
          isoboot="yes"
          break
        fi
      umount /media &> /dev/null
    fi
    if [ -n "$isoboot" ]; then
      print_status "Successfully installed linbo_gui from removable media." | tee -a /cache/linbo.log
      exit 0
    fi
  done
fi


print_status "Trying to download linbo_gui from server to cache."
mount | grep -q /cache && cache_mounted="yes"
if [ -z "$cache_mounted" ]; then
  cachedev="$(cat /tmp/linbo-cache.done)"
  if [ -n "$cachedev" ]; then
    if ! linbo_cmd mount "$cachedev" /cache; then
      nocache="yes"
    fi
  else
    nocache="yes"
  fi
fi
if [ -n "$nocache" ]; then
  print_status "Continuing without cache partition." | tee -a /cache/linbo.log
  # to avoid unmounting later
  cache_mounted="yes"
else
  print_status "Successfully mounted cache partition." | tee -a /cache/linbo.log
fi
# get network infos
[ -s /tmp/dhcp.log ] && source /tmp/dhcp.log &> /dev/null
if [ -z "$linbo_server" ]; then
  print_status "Fatal: Cannot read network infos. Continuing offline." | tee -a /cache/linbo.log
  offline="yes"
fi
# return if offline and no cache
[ -n "$nocache" -a -n "$offline" ] && exit 1


# start linbo_gui update
curdir="$(pwd)"
# change to cache if present
[ -z "$nocache" ] && cd /cache


# download if network is present ...
if [ -z "$offline" ]; then

  # force download if archive does not exist
  if [ -s "$gui_archive" -a -s "${gui_archive}.md5" ]; then
    download="no"
  else
    rm -f "${gui_archive}.md5"
    download="yes"
  fi

  # if archive already exists try to find out if there is a newer one on the server
  if [ "$download" = "no" ]; then
    # get md5sum of existing archive
    md5sum_local="$(md5sum "$gui_archive" | awk '{print $1}')"
    # get md5sum from server
    print_status "Downloading ${gui_archive}.md5 from $linbo_server." | tee -a /cache/linbo.log
    rm -f "${gui_archive}.md5"
    linbo_cmd download "$linbo_server" "${gui_archive}.md5" 2>&1 | tee -a /cache/linbo.log
    [ -s "${gui_archive}.md5" ] && md5sum_server="$(cat "${gui_archive}.md5")"
    # md5sums match, no download needed
    if [ "$md5sum_local" = "$md5sum_server" ]; then
      print_status "$a is up-to-date. No need to download." | tee -a /cache/linbo.log
      download="no"
    else
      # md5sums differ, need to download archive
      download="yes"
    fi
  fi

  if [ "$download" = "yes" ]; then
    print_status "Downloading $gui_archive from $linbo_server." | tee -a /cache/linbo.log
    linbo_cmd download "$linbo_server" "$gui_archive" 2>&1 | tee -a /cache/linbo.log
    # get md5sum file if not yet downloaded
    if [ ! -s "${gui_archive}.md5" ]; then
      print_status "Downloading ${gui_archive}.md5 from $linbo_server." | tee -a /cache/linbo.log
      linbo_cmd download "$linbo_server" "${gui_archive}.md5" 2>&1 | tee -a /cache/linbo.log
    fi
  fi

fi # offline


# unpack gui archive if present and healthy
if [ -s "$gui_archive" -a -s "${gui_archive}.md5" ]; then
  if [ "$(cat "${gui_archive}.md5")" = "$(md5sum "$gui_archive" | awk '{print $1}')" ]; then
    tar xf "$gui_archive" -C / | tee -a /cache/linbo.log
  fi
fi


# leave cache if present
[ -z "$nocache" ] && cd "$curdir"
[ -z "$cache_mounted" ] && umount /cache
if [ -s /usr/bin/linbo_gui ]; then
  print_status "Successfully installed linbo_gui from cache."
  exit 0
else
  print_status "Failed to install linbo_gui from cache."
  exit 1
fi
